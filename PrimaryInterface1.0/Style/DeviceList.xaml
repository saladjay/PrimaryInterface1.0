<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Custom="clr-namespace:PrimaryInterface1._0.Controls"
                    xmlns:local="clr-namespace:PrimaryInterface1._0">
    <Style x:Key="ToggleBtnStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Canvas Background="#00FFFFFF" Width="20" Height="20">
                        <Rectangle Width="20" Height="20" Stroke="#FFA9A9A9" Fill="#00FFFFFF" RadiusX="3" RadiusY="3" VerticalAlignment="Center" Name="Rectangle" HorizontalAlignment="Left" ></Rectangle>
                        <Line Stroke="#FF666666" SnapsToDevicePixels="False" StrokeThickness="2" X1="4" Y1="10" X2="16" Y2="10" Name="HorizontalLine" StrokeEndLineCap="Round" StrokeStartLineCap="Round"></Line>
                        <Line Stroke="#FF666666" SnapsToDevicePixels="False" StrokeThickness="2" X1="10" Y1="4" X2="10" Y2="16" Name="VerticalLine" StrokeEndLineCap="Round" StrokeStartLineCap="Round"></Line>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="VerticalLine" Value="Hidden"></Setter>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="False">
                            <Setter Property="TreeViewItem.IsExpanded" Value="False"></Setter>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Property="Shape.Stroke" TargetName="HorizontalLine">
                                <Setter.Value>
                                    <SolidColorBrush>#FF1BBBFA</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="VerticalLine">
                                <Setter.Value>
                                    <SolidColorBrush>#FF1BBBFA</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver" Value="True"></Condition>
                                <Condition Property="ToggleButton.IsChecked" Value="True"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Shape.Stroke" TargetName="Rectangle">
                                <Setter.Value>
                                    <SolidColorBrush>#FF262626</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Shape.Fill" TargetName="Rectangle">
                                <Setter.Value>
                                    <SolidColorBrush>#FF595959</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="CTreeViewItemTemplate1" TargetType="Custom:DeviceListItem">
        <Grid Name="grid">
            <Grid.RowDefinitions>
                <RowDefinition Height="20"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <ToggleButton Name="Expander" Grid.Column="0" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Width="20" Height="20" Style="{StaticResource ToggleBtnStyle}"></ToggleButton>
                <Border Grid.Column="1" HorizontalAlignment="Stretch" BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True">
                    <TextBlock Text="{TemplateBinding DeviceHeader}" Name="PART_Header" TextAlignment="Left" HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" ></TextBlock>
                </Border>
                <CheckBox Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Right" Width="20" Height="20"></CheckBox>
                <Rectangle Grid.ColumnSpan="3" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Name="Rt" IsHitTestVisible="False"></Rectangle>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <!--<Trigger Property="IsExpanded" Value="False">
                --><!--<Setter Property="UIElement.Visibility" TargetName="ItemsHost" Value="Collapsed"></Setter>--><!--
            </Trigger>-->
            <!--<Trigger Property="MouseSelected" Value="True">
                <Setter Property="Stroke" TargetName="Rt" Value="#000000"></Setter>
            </Trigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="CTreeViewItemTemplate2" TargetType="Custom:DeviceListItem">
        <Grid Name="grid">
            <Grid.RowDefinitions>
                <RowDefinition Height="20"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Name="HighLightRow"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <ToggleButton Name="Expander" Grid.Column="0" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Width="20" Height="20" Style="{StaticResource ToggleBtnStyle}"></ToggleButton>
                <Border Grid.Column="1" HorizontalAlignment="Stretch" BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True">
                    <Border.LayoutTransform>
                        <ScaleTransform ScaleX="-1"></ScaleTransform>
                    </Border.LayoutTransform>
                    <TextBlock Text="{TemplateBinding DeviceHeader}" Name="PART_Header" TextAlignment="Right" HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" >
                    </TextBlock>
                </Border>
                <CheckBox Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Right" Width="20" Height="20"></CheckBox>
                <Rectangle Grid.ColumnSpan="3" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Name="Rt" IsHitTestVisible="False"></Rectangle>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <!--<Trigger Property="ItemsControl.HasItems" Value="False">
                <Setter Property="UIElement.Visibility" TargetName="Expander" Value="Hidden"></Setter>
            </Trigger>
            <Trigger Property="MouseSelected" Value="True">
                <Setter Property="Stroke" TargetName="Rt" Value="#000000"></Setter>
            </Trigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="CTreeViewItemStyle1" TargetType="Custom:DeviceListItem">
        <!--<Setter Property="DockDirection" Value="{Binding RelativeSource={RelativeSource AncestorType=Custom:CTreeView},Path=Direction}"></Setter>-->
        <Style.Triggers>
            <Trigger Property="DockDirection" Value="Top">
                <Setter Property="Template" Value="{StaticResource CTreeViewItemTemplate2}"></Setter>
            </Trigger>
            <Trigger Property="DockDirection" Value="Left">
                <Setter Property="Template" Value="{StaticResource CTreeViewItemTemplate1}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="CTreeViewItemTemplate3" TargetType="Custom:CTreeViewItem">
        <Grid Name="grid">
            <Grid.RowDefinitions>
                <RowDefinition Height="20"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <ToggleButton Name="Expander" Grid.Column="0" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Width="20" Height="20" Style="{StaticResource ToggleBtnStyle}"></ToggleButton>
                <Border Grid.Column="1" HorizontalAlignment="Stretch" BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True">
                    <TextBlock Text="{TemplateBinding HeaderedContentControl.Header}" Name="PART_Header" TextAlignment="Left" HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" ></TextBlock>
                </Border>
                <CheckBox Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Right" Width="20" Height="20"></CheckBox>
                <Rectangle Grid.ColumnSpan="3" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Name="Rt" IsHitTestVisible="False"></Rectangle>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ItemsControl.HasItems" Value="False">
                <Setter Property="UIElement.Visibility" TargetName="Expander" Value="Hidden"></Setter>
            </Trigger>
            <Trigger Property="MouseSelected" Value="True">
                <Setter Property="Stroke" TargetName="Rt" Value="#000000"></Setter>
            </Trigger>
            <Trigger Property="TreeViewItem.IsSelected" Value="True">
                <Setter Property="Panel.Background" TargetName="Bd">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="TreeViewItem.IsSelected" Value="True"></Condition>
                    <Condition Property="Selector.IsSelectionActive" Value="False"></Condition>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="CTreeViewItemTemplate4" TargetType="Custom:CTreeViewItem">
        <Grid Name="grid">
            <Grid.RowDefinitions>
                <RowDefinition Height="20"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Name="HighLightRow"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <ToggleButton Name="Expander" Grid.Column="0" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Width="20" Height="20" Style="{StaticResource ToggleBtnStyle}"></ToggleButton>
                <Border Grid.Column="1" HorizontalAlignment="Stretch" BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True">
                    <Border.LayoutTransform>
                        <ScaleTransform ScaleX="-1"></ScaleTransform>
                    </Border.LayoutTransform>
                    <TextBlock Text="{TemplateBinding HeaderedContentControl.Header}" Name="PART_Header" TextAlignment="Right" HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" >
                    </TextBlock>
                </Border>
                <CheckBox Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Right" Width="20" Height="20"></CheckBox>
                <Rectangle Grid.ColumnSpan="3" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Name="Rt" IsHitTestVisible="False"></Rectangle>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ItemsControl.HasItems" Value="False">
                <Setter Property="UIElement.Visibility" TargetName="Expander" Value="Hidden"></Setter>
            </Trigger>
            <Trigger Property="MouseSelected" Value="True">
                <Setter Property="Stroke" TargetName="Rt" Value="#000000"></Setter>
                <!--<Setter Property="IsSelected" Value="True"></Setter>-->
            </Trigger>
            <Trigger Property="TreeViewItem.IsSelected" Value="True">
                <Setter Property="Panel.Background" TargetName="Bd">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="TreeViewItem.IsSelected" Value="True"></Condition>
                    <Condition Property="Selector.IsSelectionActive" Value="False"></Condition>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="CTreeViewItemStyle2" TargetType="Custom:CTreeViewItem">
        <Setter Property="Direction" Value="{Binding RelativeSource={RelativeSource AncestorType=Custom:CTreeView},Path=Direction}"></Setter>
        <Style.Triggers>
            <Trigger Property="Direction" Value="Top">
                <Setter Property="Template" Value="{StaticResource CTreeViewItemTemplate4}"></Setter>
            </Trigger>
            <Trigger Property="Direction" Value="Left">
                <Setter Property="Template" Value="{StaticResource CTreeViewItemTemplate3}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>